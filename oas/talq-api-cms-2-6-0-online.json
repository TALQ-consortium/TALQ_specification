{
  "externalDocs": {
    "description": "Find out more about TALQ Consortium",
    "url": "http://talq-consortium.org"
  },
  "info": {
    "contact": {
      "email": "info@talq-consortium.org",
      "name": "TALQ Consortium",
      "url": "http://talq-consortium.org"
    },
    "description": "This is a description of CMS RESTful API. To provide a bidirectional pipeline, the TALQ architecture implements a HTTP server on both the CMS and on the Gateway side. This CMS API can be used by the Gateway to send requests to the CMS.",
    "license": {
      "name": "BSD 3-Clause License",
      "url": "https://github.com/TALQ-consortium/TALQ_specification/blob/main/LICENSE",
      "x-license-content": "Copyright 2022 TALQ Consortium \n Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n \n 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\n 3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n \n THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.      "
    },
    "title": "TALQ Smart City CMS API",
    "version": "2.6.0"
  },
  "openapi": "3.0.1",
  "paths": {
    "/bracket-types": {
      "get": {
        "description": "Get the list of all bracket-types",
        "operationId": "getBracketTypes",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of Gateway",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/BracketType"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The list of all bracket-types"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          }
        },
        "summary": "",
        "tags": [
          "bracket-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalOonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteOanagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      },
      "post": {
        "description": "Add a list of new bracket types",
        "operationId": "addBracketTypes",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of Gateway",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique request identifier created by the Gateway as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the CMS as client and caused the current Gateway request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/BracketType"
                },
                "type": "array"
              }
            }
          },
          "description": "The list of bracket types that needs to be added",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/BracketType"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The bracket types are successfully created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The request could not be completed due to a conflict with the current state of the target resource. This code is used in situations where the CMS might be able to resolve the conflict and resubmit the request. The Gateway SHOULD generate a payload that includes enough information for a CMS to recognize the source of the conflict."
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors." 
          }
        },
        "summary": "",
        "tags": [
          "bracket-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      },
      "put": {
        "description": "Update a list of existing bracket types",
        "operationId": "updateBracketTypes",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of Gateway",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique request identifier created by the Gateway as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the CMS as client and caused the current Gateway request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/BracketType"
                },
                "type": "array"
              }
            }
          },
          "description": "The list of bracket types that need to be updated",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/BracketType"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The bracket types are successfully updated"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Bracket types not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors." 
          }
        },
        "summary": "",
        "tags": [
          "bracket-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      }
    },
    "/bracket-types/count": {
      "get": {
        "description": "Get the count of bracket types",
        "operationId": "getBracketTypesCount",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of Gateway",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer"
                }
              }
            },
            "description": "The count of bracket types"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          }
        },
        "summary": "",
        "tags": [
          "bracket-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      }
    },
    "/bracket-types/{bracketTypeAddress}": {
      "delete": {
        "description": "Delete a single bracket type",
        "operationId": "deleteBracketType",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of Gateway",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique request identifier created by the Gateway as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the CMS as client and caused the current Gateway request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "identifier of bracket tye to delete",
            "in": "path",
            "name": "bracketTypeAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/BracketType"
                }
              }
            },
            "description": "The bracket type is successfully deleted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Bracket type not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors. e.g: the Bracket type is referred by an entity." 
          }
        },
        "summary": "",
        "tags": [
          "bracket-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      },
      "get": {
        "description": "Get a single bracketType by address",
        "operationId": "getBracketType",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of Gateway",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "identifier of bracketType to return",
            "in": "path",
            "name": "bracketTypeAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/BracketType"
                }
              }
            },
            "description": "The found bracketType"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "BracketType not found"
          }
        },
        "summary": "",
        "tags": [
          "bracket-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      },
      "put": {
        "description": "Update a single bracket type by id",
        "operationId": "updateBracketType",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of Gateway",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique request identifier created by the Gateway as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the CMS as client and caused the current Gateway request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "identifier of bracket type to update",
            "in": "path",
            "name": "bracketTypeAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/BracketType"
              }
            }
          },
          "description": "The bracket type that need to be updated",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/BracketType"
                }
              }
            },
            "description": "The bracket type is successfully updated"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Bracket type not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors." 
          }
        },
        "summary": "",
        "tags": [
          "bracket-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      }
    },
    "/controller-types": {
      "get": {
        "description": "Get the list of all controller-types",
        "operationId": "getControllerTypes",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of Gateway",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/ControllerType"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The list of all controller-types"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          }
        },
        "summary": "",
        "tags": [
          "controller-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalOonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteOanagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      },
      "post": {
        "description": "Add a list of new controller types",
        "operationId": "addControllerTypes",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of Gateway",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique request identifier created by the Gateway as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the CMS as client and caused the current Gateway request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/ControllerType"
                },
                "type": "array"
              }
            }
          },
          "description": "The list of controller types that needs to be added",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/ControllerType"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The controller types are successfully created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The request could not be completed due to a conflict with the current state of the target resource. This code is used in situations where the CMS might be able to resolve the conflict and resubmit the request. The Gateway SHOULD generate a payload that includes enough information for a CMS to recognize the source of the conflict."
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors." 
          }
        },
        "summary": "",
        "tags": [
          "controller-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      },
      "put": {
        "description": "Update a list of existing controller types",
        "operationId": "updateControllerTypes",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of Gateway",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique request identifier created by the Gateway as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the CMS as client and caused the current Gateway request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/ControllerType"
                },
                "type": "array"
              }
            }
          },
          "description": "The list of controller types that need to be updated",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/ControllerType"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The controller types are successfully updated"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Controller types not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors." 
          }
        },
        "summary": "",
        "tags": [
          "controller-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      }
    },
    "/controller-types/count": {
      "get": {
        "description": "Get the count of controller types",
        "operationId": "getControllerTypesCount",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of Gateway",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer"
                }
              }
            },
            "description": "The count of controller types"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          }
        },
        "summary": "",
        "tags": [
          "controller-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      }
    },
    "/controller-types/{controllerTypeAddress}": {
      "delete": {
        "description": "Delete a single controller type",
        "operationId": "deleteControllerType",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of Gateway",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique request identifier created by the Gateway as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the CMS as client and caused the current Gateway request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "identifier of controller tye to delete",
            "in": "path",
            "name": "controllerTypeAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/ControllerType"
                }
              }
            },
            "description": "The controller type is successfully deleted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Controller type not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors. e.g.: the controller type is referred by an entity." 
          }
        },
        "summary": "",
        "tags": [
          "controller-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      },
      "get": {
        "description": "Get a single controllerType by address",
        "operationId": "getControllerType",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of Gateway",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "identifier of controllerType to return",
            "in": "path",
            "name": "controllerTypeAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/ControllerType"
                }
              }
            },
            "description": "The found controllerType"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "ControllerType not found"
          }
        },
        "summary": "",
        "tags": [
          "controller-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      },
      "put": {
        "description": "Update a single controller type by id",
        "operationId": "updateControllerType",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of Gateway",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique request identifier created by the Gateway as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the CMS as client and caused the current Gateway request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "identifier of controller type to update",
            "in": "path",
            "name": "controllerTypeAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/ControllerType"
              }
            }
          },
          "description": "The controller type that need to be updated",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/ControllerType"
                }
              }
            },
            "description": "The controller type is successfully updated"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Controller type not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors." 
          }
        },
        "summary": "",
        "tags": [
          "controller-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      }
    },
    "/data-packages": {
      "get": {
        "description": "Get the list of last data packages",
        "operationId": "getDataPackages",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of Gateway",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/DataPackage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The list of last data packages"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          }
        },
        "summary": "",
        "tags": [
          "data-packages"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      }
    },
    "/data-packages/{packageAddress}": {
      "get": {
        "description": "Get a specific data package",
        "operationId": "getDataPackage",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of Gateway",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The identifier of data package",
            "in": "path",
            "name": "packageAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/DataPackage"
                }
              }
            },
            "description": "The found data package"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Data package not found"
          }
        },
        "summary": "",
        "tags": [
          "data-packages"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      }
    },
    "/device-classes": {
      "post": {
        "description": "Send all device classes supported by the gateway and still not announced",
        "operationId": "addDeviceClasses",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of Gateway",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique request identifier created by the Gateway as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the CMS as client and caused the current Gateway request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/DeviceClass"
                },
                "type": "array"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/DeviceClass"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The list of device classes that has been received"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The request could not be completed due to a conflict with the current state of the target resource. This code is used in situations where the Gateway might be able to resolve the conflict and resubmit the request. The CMS SHOULD generate a payload that includes enough information for a Gateway to recognize the source of the conflict."
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors." 
          }
        },
        "summary": "",
        "tags": [
          "device-classes"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "M",
              "gw": "M"
            },
            "lighting": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "M",
              "gw": "M"
            },
            "smartTraffic": {
              "cms": "M",
              "gw": "M"
            },
            "wasteManagement": {
              "cms": "M",
              "gw": "M"
            }
          }
        ]
      },
      "put": {
        "description": "Update all device classes supported by the gateway",
        "operationId": "updateDeviceClasses",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of Gateway",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique request identifier created by the Gateway as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the CMS as client and caused the current Gateway request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/DeviceClass"
                },
                "type": "array"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/DeviceClass"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The list of device classes that has been updated"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Device class not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors." 
          }
        },
        "summary": "",
        "tags": [
          "device-classes"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "M",
              "gw": "M"
            },
            "lighting": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "M",
              "gw": "M"
            },
            "smartTraffic": {
              "cms": "M",
              "gw": "M"
            },
            "wasteManagement": {
              "cms": "M",
              "gw": "M"
            }
          }
        ]
      }
    },
    "/device-classes/{className}": {
      "delete": {
        "description": "delete a device class",
        "operationId": "deleteDeviceClass",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of Gateway",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique request identifier created by the Gateway as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the CMS as client and caused the current Gateway request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "The class name of device to delete",
            "in": "path",
            "name": "className",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/DeviceClass"
                }
              }
            },
            "description": "The device class that has been deleted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Device class not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors. e.g.: the device class is referred by an entity." 
          }
        },
        "summary": "",
        "tags": [
          "device-classes"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "M",
              "gw": "M"
            },
            "lighting": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "M",
              "gw": "M"
            },
            "smartTraffic": {
              "cms": "M",
              "gw": "M"
            },
            "wasteManagement": {
              "cms": "M",
              "gw": "M"
            }
          }
        ]
      },
      "put": {
        "description": "Update a device class",
        "operationId": "updateDeviceClass",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of Gateway",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique request identifier created by the Gateway as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the CMS as client and caused the current Gateway request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "The class name of device to update",
            "in": "path",
            "name": "className",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/DeviceClass"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/DeviceClass"
                }
              }
            },
            "description": "The device class that has been updated"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors." 
          }
        },
        "summary": "",
        "tags": [
          "device-classes"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "M",
              "gw": "M"
            },
            "lighting": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "M",
              "gw": "M"
            },
            "smartTraffic": {
              "cms": "M",
              "gw": "M"
            },
            "wasteManagement": {
              "cms": "M",
              "gw": "M"
            }
          }
        ]
      }
    },
    "/devices": {
      "get": {
        "description": "Get the list of all devices, their functions and attributes. Pagination is an optional feature at this operation, and if it is implemented it will be active only when 'offset', 'limit' or both parameters are present, otherwise the whole list of devices must be sent as a response. 'limit' allows the client to set the number of devices returned, while 'offset' specifies the ranking number of the first device on the page, being offset=0 the first device. Pagination requires an implied ordering/indexing, although it is outside TALQ scope and will be the CMS responsibility. When 'limit' is present but 'offset' is not, the result shall start with the first device of the list. If no 'limit' parameter is provided, but only an 'offset', the CMS default limit is used. ",
        "operationId": "getDevices",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of Gateway",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Class names to filter by",
            "explode": true,
            "in": "query",
            "name": "deviceClasses",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Number of devices to skip before beginning to return the result.",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number of devices to return.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/Device"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The list of all devices if pagination is not active or the configured number of devices if it is active.",
            "headers": {
              "pagination-count": {
                "description": "Number of devices included in the response",
                "schema": {
                  "type": "integer"
                }
              },
              "pagination-defaultLimit": {
                "description": "Default limit if not specified as query parameter",
                "schema": {
                  "type": "integer"
                }
              },
              "pagination-offset": {
                "description": "Number of devices skipped on the complete list",
                "schema": {
                  "type": "integer"
                }
              },
              "pagination-totalCount": {
                "description": "Total number of devices present in the server",
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          }
        },
        "summary": "",
        "tags": [
          "devices"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "M",
              "gw": "M"
            },
            "lighting": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "M",
              "gw": "M"
            },
            "smartTraffic": {
              "cms": "M",
              "gw": "M"
            },
            "wasteManagement": {
              "cms": "M",
              "gw": "M"
            }
          }
        ]
      },
      "patch": {
        "description": "Partial update of a list of existing devices. Partially updates the existing device definition. For the function array each element passed in will be cross-referenced against items in the existing function array using the id. If they match, the existing function will be updated. If there is no match the function will be added. To remove functions from the array see ‘PUT’, where an empty or reduced function array can be passed in.",
        "operationId": "partialUpdateDevices",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of Gateway",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique request identifier created by the Gateway as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the CMS as client and caused the current Gateway request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/Device"
                },
                "type": "array"
              }
            }
          },
          "description": "The list of device that need to be updated",
          "required": true
        },
        "responses": {
          "200": {
            "description": "The list of device is successfully updated"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Devices not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors." 
          }
        },
        "summary": "",
        "tags": [
          "devices"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "M",
              "gw": "M"
            },
            "lighting": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "M",
              "gw": "M"
            },
            "smartTraffic": {
              "cms": "M",
              "gw": "M"
            },
            "wasteManagement": {
              "cms": "M",
              "gw": "M"
            }
          }
        ]
      },
      "post": {
        "description": "Add a list of new devices",
        "operationId": "addDevices",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of Gateway",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique request identifier created by the Gateway as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the CMS as client and caused the current Gateway request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/Device"
                },
                "type": "array"
              }
            }
          },
          "description": "The list of devices that needs to be added",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/Device"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The devices are successfully created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The request could not be completed due to a conflict with the current state of the target resource. This code is used in situations where the Gateway might be able to resolve the conflict and resubmit the request. The CMS SHOULD generate a payload that includes enough information for a Gateway to recognize the source of the conflict."
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors." 
          }
        },
        "summary": "",
        "tags": [
          "devices"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "M",
              "gw": "M"
            },
            "lighting": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "M",
              "gw": "M"
            },
            "smartTraffic": {
              "cms": "M",
              "gw": "M"
            },
            "wasteManagement": {
              "cms": "M",
              "gw": "M"
            }
          }
        ]
      },
      "put": {
        "description": "Update a list of existing devices. Replaces the entire existing device definition. For the function array this will mean the existing device functions will be replaced with those specified in this call.",
        "operationId": "updateDevices",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of Gateway",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique request identifier created by the Gateway as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the CMS as client and caused the current Gateway request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/Device"
                },
                "type": "array"
              }
            }
          },
          "description": "The list of device that need to be updated",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/Device"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The list of devices is successfully updated"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Devices not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors." 
          }
        },
        "summary": "",
        "tags": [
          "devices"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "M",
              "gw": "M"
            },
            "lighting": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "M",
              "gw": "M"
            },
            "smartTraffic": {
              "cms": "M",
              "gw": "M"
            },
            "wasteManagement": {
              "cms": "M",
              "gw": "M"
            }
          }
        ]
      }
    },
    "/devices/{deviceAddress}": {
      "delete": {
        "description": "Delete a single device",
        "operationId": "deleteDevice",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of Gateway",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique request identifier created by the Gateway as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the CMS as client and caused the current Gateway request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "The TALQ address of device",
            "in": "path",
            "name": "deviceAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/Device"
                }
              }
            },
            "description": "The device is successfully deleted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Device not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors. e.g.: the device is referred by an entity." 
          }
        },
        "summary": "",
        "tags": [
          "devices"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "M",
              "gw": "M"
            },
            "lighting": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "M",
              "gw": "M"
            },
            "smartTraffic": {
              "cms": "M",
              "gw": "M"
            },
            "wasteManagement": {
              "cms": "M",
              "gw": "M"
            }
          }
        ]
      },
      "get": {
        "description": "Get a single device by TALQ address",
        "operationId": "getDevice",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of Gateway",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The TALQ address of device",
            "in": "path",
            "name": "deviceAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/Device"
                }
              }
            },
            "description": "The found device"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Device not found"
          }
        },
        "summary": "",
        "tags": [
          "devices"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "M",
              "gw": "M"
            },
            "lighting": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "M",
              "gw": "M"
            },
            "smartTraffic": {
              "cms": "M",
              "gw": "M"
            },
            "wasteManagement": {
              "cms": "M",
              "gw": "M"
            }
          }
        ]
      },
      "patch": {
        "description": "Partially updates the existing device definition. For the function array each element passed in will be cross-referenced against items in the existing function array using the id. If they match, the existing function will be updated. If there is no match the function will be added. For each function, only the attributes passed in will be updated in the existing function.",
        "operationId": "partialUpdateDevice",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of Gateway",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique request identifier created by the Gateway as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the CMS as client and caused the current Gateway request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "The TALQ address of device",
            "in": "path",
            "name": "deviceAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/Device"
              }
            }
          },
          "description": "The device that need to be updated",
          "required": true
        },
        "responses": {
          "200": {
            "description": "The device is successfully updated"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Device not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors." 
          }
        },
        "summary": "",
        "tags": [
          "devices"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "M",
              "gw": "M"
            },
            "lighting": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "M",
              "gw": "M"
            },
            "smartTraffic": {
              "cms": "M",
              "gw": "M"
            },
            "wasteManagement": {
              "cms": "M",
              "gw": "M"
            }
          }
        ]
      },
      "put": {
        "description": "Update a single device, replacing its definition and list of functions with the content passed in.",
        "operationId": "updateDevice",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of Gateway",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique request identifier created by the Gateway as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the CMS as client and caused the current Gateway request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "The TALQ address of device",
            "in": "path",
            "name": "deviceAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/Device"
              }
            }
          },
          "description": "The device that need to be updated",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/Device"
                }
              }
            },
            "description": "The device is successfully updated"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Device not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors." 
          }
        },
        "summary": "",
        "tags": [
          "devices"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "M",
              "gw": "M"
            },
            "lighting": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "M",
              "gw": "M"
            },
            "smartTraffic": {
              "cms": "M",
              "gw": "M"
            },
            "wasteManagement": {
              "cms": "M",
              "gw": "M"
            }
          }
        ]
      }
    },
    "/devices/{deviceAddress}/{functionId}": {
      "get": {
        "description": "Get a single Function of a device",
        "operationId": "getDeviceFunction",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of Gateway",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Scope to filter attributes by. Only attributes with matching scopes must be returned, if not specified all attributes are returned.",
            "in": "query",
            "name": "attributeScope",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The TALQ address of device",
            "in": "path",
            "name": "deviceAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The identifier of device Function",
            "in": "path",
            "name": "functionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/Function"
                }
              }
            },
            "description": "The found device Function"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Device or Function not found"
          }
        },
        "summary": "",
        "tags": [
          "devices"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "M",
              "gw": "M"
            },
            "lighting": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "M",
              "gw": "M"
            },
            "smartTraffic": {
              "cms": "M",
              "gw": "M"
            },
            "wasteManagement": {
              "cms": "M",
              "gw": "M"
            }
          }
        ]
      }
    },
    "/devices/{deviceAddress}/{functionId}/{attributeName}": {
      "get": {
        "description": "Get a single attribute of a device function",
        "operationId": "getDeviceAttribute",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of Gateway",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique request identifier created by the Gateway as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the CMS as client and caused the current Gateway request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "The TALQ address of device",
            "in": "path",
            "name": "deviceAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The TALQ address of device",
            "in": "path",
            "name": "attributeName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The identifier of device Function",
            "in": "path",
            "name": "functionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/Attribute"
                }
              }
            },
            "description": "The found attribute of a device function"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Device, Function or Attribute not found"
          }
        },
        "summary": "",
        "tags": [
          "devices"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "M",
              "gw": "M"
            },
            "lighting": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "M",
              "gw": "M"
            },
            "smartTraffic": {
              "cms": "M",
              "gw": "M"
            },
            "wasteManagement": {
              "cms": "M",
              "gw": "M"
            }
          }
        ]
      }
    },
    "/driver-types": {
      "get": {
        "description": "Get the list of all driver-types",
        "operationId": "getDriverTypes",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of Gateway",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/DriverType"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The list of all driver-types"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          }
        },
        "summary": "",
        "tags": [
          "driver-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalOonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteOanagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      },
      "post": {
        "description": "Add a list of new driver types",
        "operationId": "addDriverTypes",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of Gateway",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique request identifier created by the Gateway as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the CMS as client and caused the current Gateway request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/DriverType"
                },
                "type": "array"
              }
            }
          },
          "description": "The list of driver types that needs to be added",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/DriverType"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The driver types are successfully created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The request could not be completed due to a conflict with the current state of the target resource. This code is used in situations where the CMS might be able to resolve the conflict and resubmit the request. The Gateway SHOULD generate a payload that includes enough information for a CMS to recognize the source of the conflict."
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors." 
          }
        },
        "summary": "",
        "tags": [
          "driver-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      },
      "put": {
        "description": "Update a list of existing driver types",
        "operationId": "updateDriverTypes",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of Gateway",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique request identifier created by the Gateway as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the CMS as client and caused the current Gateway request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/DriverType"
                },
                "type": "array"
              }
            }
          },
          "description": "The list of driver types that need to be updated",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/DriverType"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The driver types are successfully updated"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Driver types not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors." 
          }
        },
        "summary": "",
        "tags": [
          "driver-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      }
    },
    "/driver-types/count": {
      "get": {
        "description": "Get the count of driver types",
        "operationId": "getDriverTypesCount",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of Gateway",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer"
                }
              }
            },
            "description": "The count of driver types"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          }
        },
        "summary": "",
        "tags": [
          "driver-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      }
    },
    "/driver-types/{driverTypeAddress}": {
      "delete": {
        "description": "Delete a single driver type",
        "operationId": "deleteDriverType",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of Gateway",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique request identifier created by the Gateway as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the CMS as client and caused the current Gateway request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "identifier of driver tye to delete",
            "in": "path",
            "name": "driverTypeAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/DriverType"
                }
              }
            },
            "description": "The driver type is successfully deleted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Driver type not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors. e,g.: the driver type is referred by an entity." 
          }
        },
        "summary": "",
        "tags": [
          "driver-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      },
      "get": {
        "description": "Get a single driverType by address",
        "operationId": "getDriverType",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of Gateway",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "identifier of driverType to return",
            "in": "path",
            "name": "driverTypeAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/DriverType"
                }
              }
            },
            "description": "The found driverType"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "DriverType not found"
          }
        },
        "summary": "",
        "tags": [
          "driver-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      },
      "put": {
        "description": "Update a single driver type by id",
        "operationId": "updateDriverType",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of Gateway",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique request identifier created by the Gateway as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the CMS as client and caused the current Gateway request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "identifier of driver type to update",
            "in": "path",
            "name": "driverTypeAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/DriverType"
              }
            }
          },
          "description": "The driver type that need to be updated",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/DriverType"
                }
              }
            },
            "description": "The driver type is successfully updated"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Driver type not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors." 
          }
        },
        "summary": "",
        "tags": [
          "driver-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      }
    },
    "/groups": {
      "get": {
        "description": "Get all groups",
        "operationId": "getGroups",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of Gateway",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/Group"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The list of groups"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          }
        },
        "summary": "",
        "tags": [
          "groups"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      }
    },
    "/groups/{groupAddress}": {
      "get": {
        "description": "Get a single group",
        "operationId": "getGroup",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of Gateway",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of group",
            "in": "path",
            "name": "groupAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/Group"
                }
              }
            },
            "description": "The found group"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Group not found"
          }
        },
        "summary": "",
        "tags": [
          "groups"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      }
    },
    "/lamp-types": {
      "get": {
        "description": "Get the list of all lamp types",
        "operationId": "getLampTypes",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of Gateway",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/LampType"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The list of all lamp types"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Lamp types not found"
          }
        },
        "summary": "",
        "tags": [
          "lamp-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalOonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "O",
              "gw": "O"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteOanagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      },    
      "post": {
        "description": "Add a list of new lamp types",
        "operationId": "addLampTypes",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of Gateway",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique request identifier created by the Gateway as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the CMS as client and caused the current Gateway request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/LampType"
                },
                "type": "array"
              }
            }
          },
          "description": "The list of lamp types that needs to be added",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/LampType"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The lamp types are successfully created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The request could not be completed due to a conflict with the current state of the target resource. This code is used in situations where the Gateway might be able to resolve the conflict and resubmit the request. The CMS SHOULD generate a payload that includes enough information for a Gateway to recognize the source of the conflict."
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors." 
          }
        },
        "summary": "",
        "tags": [
          "lamp-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      },
      "put": {
        "description": "Update a list of existing lamp types",
        "operationId": "updateLampTypes",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of Gateway",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique request identifier created by the Gateway as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the CMS as client and caused the current Gateway request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/LampType"
                },
                "type": "array"
              }
            }
          },
          "description": "The list of lamp types that need to be updated",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/LampType"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The lamp types are successfully updated"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Lamp types not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors." 
          }
        },
        "summary": "",
        "tags": [
          "lamp-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      }
    },
    "/lamp-types/count": {
      "get": {
        "description": "Get the count of lamp types",
        "operationId": "getLampTypesCount",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of Gateway",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer"
                }
              }
            },
            "description": "The count of lamp types"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          }
        },
        "summary": "",
        "tags": [
          "lamp-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      }
    },
    "/lamp-types/{lampTypeAddress}": {
      "delete": {
        "description": "Delete a single lamp type",
        "operationId": "deleteLampType",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of Gateway",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique request identifier created by the Gateway as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the CMS as client and caused the current Gateway request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "identifier of lamp tye to delete",
            "in": "path",
            "name": "lampTypeAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/LampType"
                }
              }
            },
            "description": "The lamp type is successfully deleted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Lamp type not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors. e.g.: the lamp type is referred by an entity." 
          }
        },
        "summary": "",
        "tags": [
          "lamp-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      },
      "get": {
        "description": "Get a single lampType by address",
        "operationId": "getLampType",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of Gateway",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "identifier of lampType to return",
            "in": "path",
            "name": "lampTypeAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/LampType"
                }
              }
            },
            "description": "The found lampType"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "LampType not found"
          }
        },
        "summary": "",
        "tags": [
          "lamp-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      },
      "put": {
        "description": "Update a single lamp type by id",
        "operationId": "updateLampType",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of Gateway",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique request identifier created by the Gateway as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the CMS as client and caused the current Gateway request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "identifier of lamp type to update",
            "in": "path",
            "name": "lampTypeAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/LampType"
              }
            }
          },
          "description": "The lamp type that need to be updated",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/LampType"
                }
              }
            },
            "description": "The lamp type is successfully updated"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Lamp type not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors." 
          }
        },
        "summary": "",
        "tags": [
          "lamp-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      }
    },
    "/log-reports": {
      "post": {
        "description": "Send a log report",
        "operationId": "sendLogReport",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of Gateway",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique request identifier created by the Gateway as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the CMS as client and caused the current Gateway request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/LogReport"
              }
            }
          },
          "description": "The log report to send",
          "required": true
        },
        "responses": {
          "201": {
            "description": "The log report has been treated successfully"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors." 
          }
        },
        "summary": "",
        "tags": [
          "log-reports"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "M",
              "gw": "M"
            },
            "lighting": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "M",
              "gw": "M"
            },
            "smartTraffic": {
              "cms": "M",
              "gw": "M"
            },
            "wasteManagement": {
              "cms": "M",
              "gw": "M"
            }
          }
        ]
      }
    },
    "/logger-configs/{loggerAddress}": {
      "get": {
        "description": "Get the configuration of a logger",
        "operationId": "getLoggerConfig",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of Gateway",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The identifier of logger",
            "in": "path",
            "name": "loggerAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/LoggerConfig"
                }
              }
            },
            "description": "The configuration of logger"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Logger not found"
          }
        },
        "summary": "",
        "tags": [
          "logger-configs"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "M",
              "gw": "M"
            },
            "lighting": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "M",
              "gw": "M"
            },
            "smartTraffic": {
              "cms": "M",
              "gw": "M"
            },
            "wasteManagement": {
              "cms": "M",
              "gw": "M"
            }
          }
        ]
      }
    },
    "/luminaire-types": {
      "get": {
        "description": "Get the list of all luminaire-types",
        "operationId": "getLuminaireTypes",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of Gateway",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/LuminaireType"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The list of all luminaire-types"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          }
        },
        "summary": "",
        "tags": [
          "luminaire-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalOonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteOanagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      },
      "post": {
        "description": "Add a list of new luminaire types",
        "operationId": "addLuminaireTypes",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of Gateway",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique request identifier created by the Gateway as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the CMS as client and caused the current Gateway request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/LuminaireType"
                },
                "type": "array"
              }
            }
          },
          "description": "The list of luminaire types that needs to be added",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/LuminaireType"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The luminaire types are successfully created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The request could not be completed due to a conflict with the current state of the target resource. This code is used in situations where the CMS might be able to resolve the conflict and resubmit the request. The Gateway SHOULD generate a payload that includes enough information for a CMS to recognize the source of the conflict."
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors." 
          }
        },
        "summary": "",
        "tags": [
          "luminaire-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      },
      "put": {
        "description": "Update a list of existing luminaire types",
        "operationId": "updateLuminaireTypes",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of Gateway",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique request identifier created by the Gateway as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the CMS as client and caused the current Gateway request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/LuminaireType"
                },
                "type": "array"
              }
            }
          },
          "description": "The list of luminaire types that need to be updated",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/LuminaireType"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The luminaire types are successfully updated"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Luminaire types not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors." 
          }
        },
        "summary": "",
        "tags": [
          "luminaire-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      }
    },
    "/luminaire-types/count": {
      "get": {
        "description": "Get the count of luminaire types",
        "operationId": "getLuminaireTypesCount",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of Gateway",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer"
                }
              }
            },
            "description": "The count of luminaire types"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          }
        },
        "summary": "",
        "tags": [
          "luminaire-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      }
    },
    "/luminaire-types/{luminaireTypeAddress}": {
      "delete": {
        "description": "Delete a single luminaire type",
        "operationId": "deleteLuminaireType",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of Gateway",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique request identifier created by the Gateway as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the CMS as client and caused the current Gateway request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "identifier of luminaire tye to delete",
            "in": "path",
            "name": "luminaireTypeAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/LuminaireType"
                }
              }
            },
            "description": "The luminaire type is successfully deleted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Luminaire type not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors. e.g.: the luminaire type is referred by an entity." 
          }
        },
        "summary": "",
        "tags": [
          "luminaire-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      },
      "get": {
        "description": "Get a single luminaireType by address",
        "operationId": "getLuminaireType",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of Gateway",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "identifier of luminaireType to return",
            "in": "path",
            "name": "luminaireTypeAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/LuminaireType"
                }
              }
            },
            "description": "The found luminaireType"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "LuminaireType not found"
          }
        },
        "summary": "",
        "tags": [
          "luminaire-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      },
      "put": {
        "description": "Update a single luminaire type by id",
        "operationId": "updateLuminaireType",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of Gateway",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique request identifier created by the Gateway as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the CMS as client and caused the current Gateway request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "identifier of luminaire type to update",
            "in": "path",
            "name": "luminaireTypeAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/LuminaireType"
              }
            }
          },
          "description": "The luminaire type that need to be updated",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/LuminaireType"
                }
              }
            },
            "description": "The luminaire type is successfully updated"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Luminaire type not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors." 
          }
        },
        "summary": "",
        "tags": [
          "luminaire-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      }
    },
    "/services": {
      "post": {
        "description": "Announce the list of services supported by the gateway",
        "operationId": "announceServices",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of Gateway",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique request identifier created by the Gateway as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the CMS as client and caused the current Gateway request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/Service"
                },
                "type": "array"
              }
            }
          },
          "description": "The list of services supported by the gateway"
        },
        "responses": {
          "201": {
            "description": "The list of supported services that has been received."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The request could not be completed due to a conflict with the current state of the target resource. This code is used in situations where the Gateway might be able to resolve the conflict and resubmit the request. The CMS SHOULD generate a payload that includes enough information for a Gateway to recognize the source of the conflict."
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-0-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors." 
          }
        },
        "summary": "",
        "tags": [
          "services"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "M",
              "gw": "M"
            },
            "lighting": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "M",
              "gw": "M"
            },
            "smartTraffic": {
              "cms": "M",
              "gw": "M"
            },
            "wasteManagement": {
              "cms": "M",
              "gw": "M"
            }
          }
        ]
      }
    }
  },
  "servers": [
    {
      "url": "https://talq-consortium.org/v2"
    }
  ],
  "tags": [
    {
      "description": "Access to services",
      "name": "services"
    },
    {
      "description": "Access to devices classes",
      "name": "device-classes"
    },
    {
      "description": "Access to devices",
      "name": "devices"
    },
    {
      "description": "Access to logger configuration",
      "name": "logger-configs"
    },
    {
      "description": "Access to log reports",
      "name": "log-reports"
    },
    {
      "description": "Access to groups",
      "name": "groups"
    },
    {
      "description": "Access to data packages",
      "name": "data-packages"
    },
    {
      "description": "Access to luminaire types",
      "name": "luminaire-types"
    },
    {
      "description": "Access to bracket types",
      "name": "bracket-types"
    },
    {
      "description": "Access to driver types",
      "name": "driver-types"
    },
    {
      "description": "Access to controller types",
      "name": "controller-types"
    }    
  ]
}