{
  "externalDocs": {
    "description": "Find out more about TALQ Consortium",
    "url": "http://talq-consortium.org"
  },
  "info": {
    "contact": {
      "email": "info@talq-consortium.org",
      "name": "TALQ Consortium",
      "url": "http://talq-consortium.org"
    },
    "description": "This is a description of Gateway RESTful API. To provide a bidirectional pipeline, the TALQ architecture implements a HTTP server on both the CMS and on the Gateway side. This Gateway API can be used by the CMS to send requests to the Gateway.",
    "license": {
      "name": "BSD 3-Clause License",
      "url": "https://github.com/TALQ-consortium/TALQ_specification/blob/main/LICENSE",
      "x-license-content": "Copyright 2022 TALQ Consortium \n Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n \n 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\n 3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n \n THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.      "
    },
    "title": "TALQ Smart City Gateway API",
    "version": "2.6.3"
  },
  "openapi": "3.0.1",
  "paths": {
    "/assign-commands": {
      "get": {
        "description": "Get the list of all assign commands received by the Gateway",
        "operationId": "getAssignCommands",
        "parameters": [
          {
            "description": "The version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }          
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/AssignCommand"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The list of all assign commands received by the Gateway"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Assign commands not found"
          }
        },
        "summary": "",
        "tags": [
          "assign-commands"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "O",
              "gw": "O"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteOanagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      },    
      "post": {
        "description": "Send a command to assign an entity to a list of TALQ addresses, for instance a Calendar to a list of lamp actuators. Asynchronous and synchronous behaviours are supported. When an asynchronous response is returned (202-Accepted), the assignment is considered being processed and the Gateway shall send a PATCH request, or several, sometime in the future. The PATCH request(s) from the Gateway will include the list of all the affected devices.",
        "operationId": "assignCommand",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Unique request identifier created by the CMS as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the Gateway as client and caused the current CMS request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }          
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/AssignCommand"
              }
            }
          },
          "description": "The command to assign",
          "required": true
        },
        "responses": {
          "201": {
            "description": "The command is assigned."
          },
          "202": {
            "description": "The command is received, but the assignment is not done yet."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors. e.g: an AssignCommand with the property 'addresses' set to an empty array." 
          }
        },
        "summary": "",
        "tags": [
          "assign-commands"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "M",
              "gw": "M"
            },
            "lighting": {
              "cms": "M",
              "gw": "M"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "M",
              "gw": "M"
            },
            "smartTraffic": {
              "cms": "M",
              "gw": "M"
            },
            "wasteManagement": {
              "cms": "M",
              "gw": "M"
            }
          }
        ]
      }
    },
    "/bracket-types": {
      "get": {
        "description": "Get the list of all bracket-types",
        "operationId": "getBracketTypes",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }          
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/BracketType"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The list of all bracket-types"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          }
        },
        "summary": "",
        "tags": [
          "bracket-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteOanagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      },
      "post": {
        "description": "Add a list of new bracket types",
        "operationId": "addBracketTypes",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Unique request identifier created by the CMS as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the Gateway as client and caused the current CMS request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }          
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/BracketType"
                },
                "type": "array"
              }
            }
          },
          "description": "The list of bracket types that needs to be added",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/BracketType"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The bracket types are successfully created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The request could not be completed due to a conflict with the current state of the target resource. This code is used in situations where the CMS might be able to resolve the conflict and resubmit the request. The Gateway SHOULD generate a payload that includes enough information for a CMS to recognize the source of the conflict."
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors." 
          }
        },
        "summary": "",
        "tags": [
          "bracket-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      },
      "put": {
        "description": "Update a list of existing bracket types",
        "operationId": "updateBracketTypes",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Unique request identifier created by the CMS as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the Gateway as client and caused the current CMS request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }          
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/BracketType"
                },
                "type": "array"
              }
            }
          },
          "description": "The list of bracket types that need to be updated",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/BracketType"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The bracket types are successfully updated"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Bracket types not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors." 
          }
        },
        "summary": "",
        "tags": [
          "bracket-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      }
    },
    "/bracket-types/count": {
      "get": {
        "description": "Get the count of bracket types",
        "operationId": "getBracketTypesCount",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }          
        ],
        "responses": {
          "200": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              }
            },
            "description": "The count of bracket types"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          }
        },
        "summary": "",
        "tags": [
          "bracket-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      }
    },
    "/bracket-types/{bracketTypeAddress}": {
      "delete": {
        "description": "Delete a single bracket type",
        "operationId": "deleteBracketType",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Unique request identifier created by the CMS as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the Gateway as client and caused the current CMS request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }          ,
          {
            "description": "identifier of bracket tye to delete",
            "in": "path",
            "name": "bracketTypeAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/BracketType"
                }
              }
            },
            "description": "The bracket type is successfully deleted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Bracket type not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors. e.g: the bracketType is referred by an entity." 
          }
        },
        "summary": "",
        "tags": [
          "bracket-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      },
      "get": {
        "description": "Get a single bracketType by address",
        "operationId": "getBracketType",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "identifier of bracketType to return",
            "in": "path",
            "name": "bracketTypeAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/BracketType"
                }
              }
            },
            "description": "The found bracketType"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "BracketType not found"
          }
        },
        "summary": "",
        "tags": [
          "bracket-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      },
      "put": {
        "description": "Update a single bracket type by id",
        "operationId": "updateBracketType",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Unique request identifier created by the CMS as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the Gateway as client and caused the current CMS request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }          ,
          {
            "description": "identifier of bracket type to update",
            "in": "path",
            "name": "bracketTypeAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/BracketType"
              }
            }
          },
          "description": "The bracket type that need to be updated",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/BracketType"
                }
              }
            },
            "description": "The bracket type is successfully updated"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Bracket type not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors. e.g: the definition is not supported." 
          }
        },
        "summary": "",
        "tags": [
          "bracket-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      }
    },
    "/calendars": {
      "get": {
        "description": "Get the list of all calendars",
        "operationId": "getCalendars",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }          
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/Calendar"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The list of all calendars"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          }
        },
        "summary": "",
        "tags": [
          "calendars"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "M",
              "gw": "M"
            },
            "lighting": {
              "cms": "M",
              "gw": "M"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "M",
              "gw": "M"
            },
            "smartTraffic": {
              "cms": "M",
              "gw": "M"
            },
            "wasteManagement": {
              "cms": "M",
              "gw": "M"
            }
          }
        ]
      },
      "post": {
        "description": "Add a list of new calendars",
        "operationId": "addCalendars",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Unique request identifier created by the CMS as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the Gateway as client and caused the current CMS request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }          
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/Calendar"
                },
                "type": "array"
              }
            }
          },
          "description": "The list of calendars that needs to be added",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/Calendar"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The calendars are successfully created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The request could not be completed due to a conflict with the current state of the target resource. This code is used in situations where the CMS might be able to resolve the conflict and resubmit the request. The Gateway SHOULD generate a payload that includes enough information for a CMS to recognize the source of the conflict."
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors." 
          }
        },
        "summary": "",
        "tags": [
          "calendars"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "M",
              "gw": "M"
            },
            "lighting": {
              "cms": "M",
              "gw": "M"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "M",
              "gw": "M"
            },
            "smartTraffic": {
              "cms": "M",
              "gw": "M"
            },
            "wasteManagement": {
              "cms": "M",
              "gw": "M"
            }
          }
        ]
      },
      "put": {
        "description": "Update a list of existing calendars",
        "operationId": "updateCalendars",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Unique request identifier created by the CMS as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the Gateway as client and caused the current CMS request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }          
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/Calendar"
                },
                "type": "array"
              }
            }
          },
          "description": "The list of calendars that need to be updated",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/Calendar"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The calendars are successfully updated"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Calendars not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors." 
          }
        },
        "summary": "",
        "tags": [
          "calendars"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "M",
              "gw": "M"
            },
            "lighting": {
              "cms": "M",
              "gw": "M"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "M",
              "gw": "M"
            },
            "smartTraffic": {
              "cms": "M",
              "gw": "M"
            },
            "wasteManagement": {
              "cms": "M",
              "gw": "M"
            }
          }
        ]
      }
    },
    "/calendars/count": {
      "get": {
        "description": "Get the count of calendars",
        "operationId": "getCalendarsCount",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }          
        ],
        "responses": {
          "200": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              }
            },
            "description": "The count of calendars"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          }
        },
        "summary": "",
        "tags": [
          "calendars"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "M",
              "gw": "M"
            },
            "lighting": {
              "cms": "M",
              "gw": "M"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "M",
              "gw": "M"
            },
            "smartTraffic": {
              "cms": "M",
              "gw": "M"
            },
            "wasteManagement": {
              "cms": "M",
              "gw": "M"
            }
          }
        ]
      }
    },
    "/calendars/{calendarAddress}": {
      "delete": {
        "description": "Delete a single calendar",
        "operationId": "deleteCalendar",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Unique request identifier created by the CMS as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the Gateway as client and caused the current CMS request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }          ,
          {
            "description": "identifier of calendar to delete",
            "in": "path",
            "name": "calendarAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/Calendar"
                }
              }
            },
            "description": "The calendar is successfully deleted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Calendar not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors. e.g: the calendar is referred by an entity." 
          }
        },
        "summary": "",
        "tags": [
          "calendars"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "M",
              "gw": "M"
            },
            "lighting": {
              "cms": "M",
              "gw": "M"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "M",
              "gw": "M"
            },
            "smartTraffic": {
              "cms": "M",
              "gw": "M"
            },
            "wasteManagement": {
              "cms": "M",
              "gw": "M"
            }
          }
        ]
      },
      "get": {
        "description": "Get a single calendar by id",
        "operationId": "getCalendar",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "identifier of calendar to return",
            "in": "path",
            "name": "calendarAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/Calendar"
                }
              }
            },
            "description": "The found calendar"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Calendar not found"
          }
        },
        "summary": "",
        "tags": [
          "calendars"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "M",
              "gw": "M"
            },
            "lighting": {
              "cms": "M",
              "gw": "M"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "M",
              "gw": "M"
            },
            "smartTraffic": {
              "cms": "M",
              "gw": "M"
            },
            "wasteManagement": {
              "cms": "M",
              "gw": "M"
            }
          }
        ]
      },
      "put": {
        "description": "Update a single calendar by id",
        "operationId": "updateCalendar",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Unique request identifier created by the CMS as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the Gateway as client and caused the current CMS request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }          ,
          {
            "description": "identifier of calendar to return",
            "in": "path",
            "name": "calendarAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/Calendar"
              }
            }
          },
          "description": "The calendar that need to be updated",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/Calendar"
                }
              }
            },
            "description": "The calendar is successfully updated"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Calendar not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors. e.g: the calendar definition is not supported." 
          }
        },
        "summary": "",
        "tags": [
          "calendars"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "M",
              "gw": "M"
            },
            "lighting": {
              "cms": "M",
              "gw": "M"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "M",
              "gw": "M"
            },
            "smartTraffic": {
              "cms": "M",
              "gw": "M"
            },
            "wasteManagement": {
              "cms": "M",
              "gw": "M"
            }
          }
        ]
      }
    },
    "/control-programs": {
      "get": {
        "description": "Get the list of all control programs",
        "operationId": "getControlPrograms",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }          
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/ControlProgram"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The list of all control programs"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          }
        },
        "summary": "",
        "tags": [
          "control-programs"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "M",
              "gw": "M"
            },
            "lighting": {
              "cms": "M",
              "gw": "M"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "M",
              "gw": "M"
            },
            "smartTraffic": {
              "cms": "M",
              "gw": "M"
            },
            "wasteManagement": {
              "cms": "M",
              "gw": "M"
            }
          }
        ]
      },
      "post": {
        "description": "Add a list of new control programs",
        "operationId": "addControlPrograms",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Unique request identifier created by the CMS as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the Gateway as client and caused the current CMS request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }          
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/ControlProgram"
                },
                "type": "array"
              }
            }
          },
          "description": "The list of control programs that needs to be added",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/ControlProgram"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The control programs are successfully created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The request could not be completed due to a conflict with the current state of the target resource. This code is used in situations where the CMS might be able to resolve the conflict and resubmit the request. The Gateway SHOULD generate a payload that includes enough information for a CMS to recognize the source of the conflict."
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors." 
          }
        },
        "summary": "",
        "tags": [
          "control-programs"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "M",
              "gw": "M"
            },
            "lighting": {
              "cms": "M",
              "gw": "M"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "M",
              "gw": "M"
            },
            "smartTraffic": {
              "cms": "M",
              "gw": "M"
            },
            "wasteManagement": {
              "cms": "M",
              "gw": "M"
            }
          }
        ]
      },
      "put": {
        "description": "Update a list of existing control programs",
        "operationId": "updateControlPrograms",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Unique request identifier created by the CMS as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the Gateway as client and caused the current CMS request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }          
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/ControlProgram"
                },
                "type": "array"
              }
            }
          },
          "description": "The list of control programs that need to be updated",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/ControlProgram"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The control programs are successfully updated"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Control programs not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors." 
          }
        },
        "summary": "",
        "tags": [
          "control-programs"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "M",
              "gw": "M"
            },
            "lighting": {
              "cms": "M",
              "gw": "M"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "M",
              "gw": "M"
            },
            "smartTraffic": {
              "cms": "M",
              "gw": "M"
            },
            "wasteManagement": {
              "cms": "M",
              "gw": "M"
            }
          }
        ]
      }
    },
    "/control-programs/count": {
      "get": {
        "description": "Get the count of control programs",
        "operationId": "getControlProgramsCount",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }          
        ],
        "responses": {
          "200": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              }
            },
            "description": "The count of control programs"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          }
        },
        "summary": "",
        "tags": [
          "control-programs"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "M",
              "gw": "M"
            },
            "lighting": {
              "cms": "M",
              "gw": "M"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "M",
              "gw": "M"
            },
            "smartTraffic": {
              "cms": "M",
              "gw": "M"
            },
            "wasteManagement": {
              "cms": "M",
              "gw": "M"
            }
          }
        ]
      }
    },
    "/control-programs/{controlProgramAddress}": {
      "delete": {
        "description": "Delete a single control program",
        "operationId": "deleteControlProgram",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Unique request identifier created by the CMS as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the Gateway as client and caused the current CMS request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }          ,
          {
            "description": "identifier of control program to delete",
            "in": "path",
            "name": "controlProgramAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/ControlProgram"
                }
              }
            },
            "description": "The control program is successfully deleted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Control program not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors. e.g: the ControlProgram is referred by a calendar." 
          }
        },
        "summary": "",
        "tags": [
          "control-programs"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "M",
              "gw": "M"
            },
            "lighting": {
              "cms": "M",
              "gw": "M"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "M",
              "gw": "M"
            },
            "smartTraffic": {
              "cms": "M",
              "gw": "M"
            },
            "wasteManagement": {
              "cms": "M",
              "gw": "M"
            }
          }
        ]
      },
      "get": {
        "description": "Get a single control program by id",
        "operationId": "getControlProgram",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "identifier of control program to return",
            "in": "path",
            "name": "controlProgramAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/ControlProgram"
                }
              }
            },
            "description": "The found control program"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Control program not found"
          }
        },
        "summary": "",
        "tags": [
          "control-programs"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "M",
              "gw": "M"
            },
            "lighting": {
              "cms": "M",
              "gw": "M"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "M",
              "gw": "M"
            },
            "smartTraffic": {
              "cms": "M",
              "gw": "M"
            },
            "wasteManagement": {
              "cms": "M",
              "gw": "M"
            }
          }
        ]
      },
      "put": {
        "description": "Update a single control program by id",
        "operationId": "updateControlProgram",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Unique request identifier created by the CMS as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the Gateway as client and caused the current CMS request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }          ,
          {
            "description": "identifier of control program to return",
            "in": "path",
            "name": "controlProgramAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/ControlProgram"
              }
            }
          },
          "description": "The control program that need to be updated",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/ControlProgram"
                }
              }
            },
            "description": "The control program is successfully updated"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Control program not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors. e.g: the ControlProgram definition is not supported." 
          }
        },
        "summary": "",
        "tags": [
          "control-programs"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "M",
              "gw": "M"
            },
            "lighting": {
              "cms": "M",
              "gw": "M"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "M",
              "gw": "M"
            },
            "smartTraffic": {
              "cms": "M",
              "gw": "M"
            },
            "wasteManagement": {
              "cms": "M",
              "gw": "M"
            }
          }
        ]
      }
    },
    "/controller-types": {
      "get": {
        "description": "Get the list of all controller-types",
        "operationId": "getControllerTypes",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }          
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/ControllerType"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The list of all controller-types"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          }
        },
        "summary": "",
        "tags": [
          "controller-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteOanagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      },
      "post": {
        "description": "Add a list of new controller types",
        "operationId": "addControllerTypes",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Unique request identifier created by the CMS as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the Gateway as client and caused the current CMS request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }          
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/ControllerType"
                },
                "type": "array"
              }
            }
          },
          "description": "The list of controller types that needs to be added",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/ControllerType"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The controller types are successfully created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The request could not be completed due to a conflict with the current state of the target resource. This code is used in situations where the CMS might be able to resolve the conflict and resubmit the request. The Gateway SHOULD generate a payload that includes enough information for a CMS to recognize the source of the conflict."
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors." 
          }
        },
        "summary": "",
        "tags": [
          "controller-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      },
      "put": {
        "description": "Update a list of existing controller types",
        "operationId": "updateControllerTypes",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Unique request identifier created by the CMS as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the Gateway as client and caused the current CMS request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }          
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/ControllerType"
                },
                "type": "array"
              }
            }
          },
          "description": "The list of controller types that need to be updated",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/ControllerType"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The controller types are successfully updated"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Controller types not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors." 
          }
        },
        "summary": "",
        "tags": [
          "controller-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      }
    },
    "/controller-types/count": {
      "get": {
        "description": "Get the count of controller types",
        "operationId": "getControllerTypesCount",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }          
        ],
        "responses": {
          "200": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              }
            },
            "description": "The count of controller types"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          }
        },
        "summary": "",
        "tags": [
          "controller-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      }
    },
    "/controller-types/{controllerTypeAddress}": {
      "delete": {
        "description": "Delete a single controller type",
        "operationId": "deleteControllerType",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Unique request identifier created by the CMS as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the Gateway as client and caused the current CMS request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }          ,
          {
            "description": "identifier of controller tye to delete",
            "in": "path",
            "name": "controllerTypeAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/ControllerType"
                }
              }
            },
            "description": "The controller type is successfully deleted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Controller type not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors. e.g: the controllerType is referred by an entity." 
          }
        },
        "summary": "",
        "tags": [
          "controller-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      },
      "get": {
        "description": "Get a single controllerType by address",
        "operationId": "getControllerType",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "identifier of controllerType to return",
            "in": "path",
            "name": "controllerTypeAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/ControllerType"
                }
              }
            },
            "description": "The found controllerType"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "ControllerType not found"
          }
        },
        "summary": "",
        "tags": [
          "controller-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      },
      "put": {
        "description": "Update a single controller type by id",
        "operationId": "updateControllerType",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Unique request identifier created by the CMS as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the Gateway as client and caused the current CMS request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }          ,
          {
            "description": "identifier of controller type to update",
            "in": "path",
            "name": "controllerTypeAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/ControllerType"
              }
            }
          },
          "description": "The controller type that need to be updated",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/ControllerType"
                }
              }
            },
            "description": "The controller type is successfully updated"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Controller type not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors. e.g: the controllerType definition is not supported." 
          }
        },
        "summary": "",
        "tags": [
          "controller-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      }
    },
    "/data-packages": {
      "get": {
        "description": "Get the list of installed data packages",
        "operationId": "getDataPackages",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/DataPackage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The list of installed data packages"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          }
        },
        "summary": "",
        "tags": [
          "data-packages"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "O",
              "gw": "O"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      },
      "put": {
        "description": "Upgrade a list of data packages",
        "operationId": "upgradeDataPackages",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Unique request identifier created by the CMS as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the Gateway as client and caused the current CMS request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }          
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/DataPackage"
                },
                "type": "array"
              }
            }
          },
          "description": "The data packages that need to be upgraded",
          "required": true
        },
        "responses": {
          "200": {
            "description": "The data packages are upgraded"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Data packages not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors." 
          }
        },
        "summary": "",
        "tags": [
          "data-packages"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "O",
              "gw": "O"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      }
    },
    "/device-classes": {
      "get": {
        "description": "Get all device classes supported by the gateway",
        "operationId": "getDeviceClasses",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }          
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/DeviceClass"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The list of all device classes"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          }
        },
        "summary": "",
        "tags": [
          "device-classes"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "M",
              "gw": "M"
            },
            "lighting": {
              "cms": "M",
              "gw": "M"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "M",
              "gw": "M"
            },
            "smartTraffic": {
              "cms": "M",
              "gw": "M"
            },
            "wasteManagement": {
              "cms": "M",
              "gw": "M"
            }
          }
        ]
      }
    },
    "/device-classes/count": {
      "get": {
        "description": "Get the count of device classes",
        "operationId": "getDeviceClassesCount",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              }
            },
            "description": "The count of device classes"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          }
        },
        "summary": "",
        "tags": [
          "device-classes"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "M",
              "gw": "M"
            },
            "lighting": {
              "cms": "M",
              "gw": "M"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "M",
              "gw": "M"
            },
            "smartTraffic": {
              "cms": "M",
              "gw": "M"
            },
            "wasteManagement": {
              "cms": "M",
              "gw": "M"
            }
          }
        ]
      }
    },
    "/device-classes/{className}": {
      "get": {
        "description": "Get a single device class",
        "operationId": "getDeviceClass",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "The class name of Device to return",
            "in": "path",
            "name": "className",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/DeviceClass"
                }
              }
            },
            "description": "The found Device class"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Device class not found"
          }
        },
        "summary": "",
        "tags": [
          "device-classes"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "M",
              "gw": "M"
            },
            "lighting": {
              "cms": "M",
              "gw": "M"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "M",
              "gw": "M"
            },
            "smartTraffic": {
              "cms": "M",
              "gw": "M"
            },
            "wasteManagement": {
              "cms": "M",
              "gw": "M"
            }
          }
        ]
      }
    },
    "/devices": {
      "get": {
        "description": "Get the list of all devices, their functions and attributes. Pagination is an optional feature at this operation, and if it is implemented it will be active only when 'offset', 'limit' or both parameters are present, otherwise the whole list of devices must be sent as a response. 'limit' allows the client to set the number of devices returned, while 'offset' specifies the ranking number of the first device on the page, being offset=0 the first device. Pagination requires an implied ordering/indexing, although it is outside TALQ scope and will be the Gateway responsibility. When 'limit' is present but 'offset' is not, the result shall start with the first device of the list. If no 'limit' parameter is provided, but only an 'offset', the Gateway default limit is used. ",
        "operationId": "getDevices",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Class names to filter by",
            "explode": true,
            "in": "query",
            "name": "deviceClasses",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Number of devices to skip before beginning to return the result.",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number of devices to return.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/Device"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The list of all devices if pagination is not active or the configured number of devices if it is active.",
            "headers": {
              "pagination-count": {
                "description": "Number of devices included in the response",
                "schema": {
                  "type": "integer"
                }
              },
              "pagination-defaultLimit": {
                "description": "Default limit if not specified as query parameter",
                "schema": {
                  "type": "integer"
                }
              },
              "pagination-offset": {
                "description": "Number of devices skipped on the complete list",
                "schema": {
                  "type": "integer"
                }
              },
              "pagination-totalCount": {
                "description": "Total number of devices present in the server",
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          }
        },
        "summary": "",
        "tags": [
          "devices"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "M",
              "gw": "M"
            },
            "lighting": {
              "cms": "M",
              "gw": "M"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "M",
              "gw": "M"
            },
            "smartTraffic": {
              "cms": "M",
              "gw": "M"
            },
            "wasteManagement": {
              "cms": "M",
              "gw": "M"
            }
          }
        ]
      },
      "patch": {
        "description": "Partial update of a list of existing devices. Partially updates the existing device definition. For the function array each element passed in will be cross-referenced against items in the existing function array using the id. If they match, the existing function will be updated. If there is no match the function will be added. To remove functions from the array see ‘PUT’, where an empty or reduced function array can be passed in.",
        "operationId": "partialUpdateDevices",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Unique request identifier created by the CMS as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the Gateway as client and caused the current CMS request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }          
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/Device"
                },
                "type": "array"
              }
            }
          },
          "description": "The list of devices that need to be updated",
          "required": true
        },
        "responses": {
          "200": {
            "description": "The list of devices is successfully updated"
          },
          "202": {
            "description": "The list of devices is successfully accepted for processing, but the processing has not been completed; in fact, processing may not have started yet."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Devices not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors." 
          }
        },
        "summary": "",
        "tags": [
          "devices"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "M",
              "gw": "M"
            },
            "lighting": {
              "cms": "M",
              "gw": "M"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "M",
              "gw": "M"
            },
            "smartTraffic": {
              "cms": "M",
              "gw": "M"
            },
            "wasteManagement": {
              "cms": "M",
              "gw": "M"
            }
          }
        ]
      },
      "post": {
        "description": "Add a list of new devices. The CMS can create device addresses, and the Gateway will handle its unicity answering the CMS through HTTP responses. If a Nil UUID is used by the CMS as device address, the Gateway will return the real address inside the response.",
        "operationId": "addDevices",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Unique request identifier created by the CMS as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the Gateway as client and caused the current CMS request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }          
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/Device"
                },
                "type": "array"
              }
            }
          },
          "description": "The list of devices that needs to be added",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/Device"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The devices are successfully created"
          },
          "202": {
            "description": "The list of devices is successfully accepted for processing, but the processing has not been completed; in fact, processing may not have started yet."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The request could not be completed due to a conflict with the current state of the target resource. This code is used in situations where the CMS might be able to resolve the conflict and resubmit the request. The Gateway SHOULD generate a payload that includes enough information for a CMS to recognize the source of the conflict."
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors." 
          }
        },
        "summary": "",
        "tags": [
          "devices"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "M",
              "gw": "M"
            },
            "lighting": {
              "cms": "M",
              "gw": "M"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "M",
              "gw": "M"
            },
            "smartTraffic": {
              "cms": "M",
              "gw": "M"
            },
            "wasteManagement": {
              "cms": "M",
              "gw": "M"
            }
          }
        ]
      },
      "put": {
        "description": "Update a list of existing devices. Replaces the entire existing device definition. For the function array this will mean the existing device functions will be replaced with those specified in this call.",
        "operationId": "updateDevices",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Unique request identifier created by the CMS as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the Gateway as client and caused the current CMS request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }          
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/Device"
                },
                "type": "array"
              }
            }
          },
          "description": "The list of device that need to be updated",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/Device"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The list of devices is successfully updated"
          },
          "202": {
            "description": "The list of devices is successfully accepted for processing, but the processing has not been completed; in fact, processing may not have started yet."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Devices not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors." 
          }
        },
        "summary": "",
        "tags": [
          "devices"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "M",
              "gw": "M"
            },
            "lighting": {
              "cms": "M",
              "gw": "M"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "M",
              "gw": "M"
            },
            "smartTraffic": {
              "cms": "M",
              "gw": "M"
            },
            "wasteManagement": {
              "cms": "M",
              "gw": "M"
            }
          }
        ]
      }
    },
    "/devices/count": {
      "get": {
        "description": "Get the count of devices",
        "operationId": "getDevicesCount",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Class names to filter by",
            "explode": true,
            "in": "query",
            "name": "deviceClasses",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              }
            },
            "description": "The count of devices"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          }
        },
        "summary": "",
        "tags": [
          "devices"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "M",
              "gw": "M"
            },
            "lighting": {
              "cms": "M",
              "gw": "M"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "M",
              "gw": "M"
            },
            "smartTraffic": {
              "cms": "M",
              "gw": "M"
            },
            "wasteManagement": {
              "cms": "M",
              "gw": "M"
            }
          }
        ]
      }
    },
    "/devices/{deviceAddress}": {
      "delete": {
        "description": "Delete a device",
        "operationId": "deleteDevice",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Unique request identifier created by the CMS as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the Gateway as client and caused the current CMS request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }          ,
          {
            "description": "The TALQ address of device",
            "in": "path",
            "name": "deviceAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/Device"
                }
              }
            },
            "description": "Device is successfully deleted"
          },
          "202": {
            "description": "The delete request has been accepted for processing, but the processing has not been completed; in fact, processing may not have started yet."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Device not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors." 
          }
        },
        "summary": "",
        "tags": [
          "devices"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "M",
              "gw": "M"
            },
            "lighting": {
              "cms": "M",
              "gw": "M"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "M",
              "gw": "M"
            },
            "smartTraffic": {
              "cms": "M",
              "gw": "M"
            },
            "wasteManagement": {
              "cms": "M",
              "gw": "M"
            }
          }
        ]
      },
      "get": {
        "description": "Get a single device by TALQ address",
        "operationId": "getDevice",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "The TALQ address of device",
            "in": "path",
            "name": "deviceAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/Device"
                }
              }
            },
            "description": "The found device"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Device not found"
          }
        },
        "summary": "",
        "tags": [
          "devices"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "M",
              "gw": "M"
            },
            "lighting": {
              "cms": "M",
              "gw": "M"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "M",
              "gw": "M"
            },
            "smartTraffic": {
              "cms": "M",
              "gw": "M"
            },
            "wasteManagement": {
              "cms": "M",
              "gw": "M"
            }
          }
        ]
      },
      "patch": {
        "description": "Partially updates the existing device definition. For the function array each element passed in will be cross-referenced against items in the existing function array using the id. If they match, the existing function will be updated. If there is no match the function will be added. For each function, only the attributes passed in will be updated in the existing function.",
        "operationId": "partialUpdateDevice",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Unique request identifier created by the CMS as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the Gateway as client and caused the current CMS request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }          ,
          {
            "description": "The TALQ address of device",
            "in": "path",
            "name": "deviceAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/Device"
              }
            }
          },
          "description": "The device that need to be updated",
          "required": true
        },
        "responses": {
          "200": {
            "description": "The device is successfully updated"
          },
          "202": {
            "description": "The device is successfully accepted for processing, but the processing has not been completed; in fact, processing may not have started yet."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Device not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors." 
          }
        },
        "summary": "",
        "tags": [
          "devices"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "M",
              "gw": "M"
            },
            "lighting": {
              "cms": "M",
              "gw": "M"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "M",
              "gw": "M"
            },
            "smartTraffic": {
              "cms": "M",
              "gw": "M"
            },
            "wasteManagement": {
              "cms": "M",
              "gw": "M"
            }
          }
        ]
      }
    },
    "/devices/{deviceAddress}/{functionId}": {
      "get": {
        "description": "Get a single Function of a device",
        "operationId": "getDeviceFunction",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Scope to filter attributes by. Only attributes with matching scopes must be returned, if not specified all attributes are returned.",
            "in": "query",
            "name": "attributeScope",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The TALQ address of device",
            "in": "path",
            "name": "deviceAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The identifier of device Function",
            "in": "path",
            "name": "functionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/Function"
                }
              }
            },
            "description": "The found device Function"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Device or Function not found"
          }
        },
        "summary": "",
        "tags": [
          "devices"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "M",
              "gw": "M"
            },
            "lighting": {
              "cms": "M",
              "gw": "M"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "M",
              "gw": "M"
            },
            "smartTraffic": {
              "cms": "M",
              "gw": "M"
            },
            "wasteManagement": {
              "cms": "M",
              "gw": "M"
            }
          }
        ]
      },
      "patch": {
        "description": "Partial update a list of attributes from a function, only the attributes passed in will be updated.",
        "operationId": "partialUpdateFunction",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Unique request identifier created by the CMS as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the Gateway as client and caused the current CMS request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }          ,
          {
            "description": "The TALQ address of device",
            "in": "path",
            "name": "deviceAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The identifier of device Function",
            "in": "path",
            "name": "functionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/Function"
              }
            }
          },
          "description": "The list of attributes that need to be updated",
          "required": true
        },
        "responses": {
          "200": {
            "description": "The function is successfully updated"
          },
          "202": {
            "description": "The function is successfully accepted for processing, but the processing has not been completed; in fact, processing may not have started yet."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Function not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors." 
          }
        },
        "summary": "",
        "tags": [
          "devices"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "M",
              "gw": "M"
            },
            "lighting": {
              "cms": "M",
              "gw": "M"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "M",
              "gw": "M"
            },
            "smartTraffic": {
              "cms": "M",
              "gw": "M"
            },
            "wasteManagement": {
              "cms": "M",
              "gw": "M"
            }
          }
        ]
      }
    },
    "/devices/{deviceAddress}/{functionId}/{attributeName}": {
      "get": {
        "description": "Get a single attribute of a device function",
        "operationId": "getDeviceAttribute",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "The TALQ address of device",
            "in": "path",
            "name": "deviceAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The identifier of device Function",
            "in": "path",
            "name": "functionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of device Attribute",
            "in": "path",
            "name": "attributeName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/Attribute"
                }
              }
            },
            "description": "The found attribute of a device function"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Device, Function or Attribute not found"
          }
        },
        "summary": "",
        "tags": [
          "devices"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "M",
              "gw": "M"
            },
            "lighting": {
              "cms": "M",
              "gw": "M"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "M",
              "gw": "M"
            },
            "smartTraffic": {
              "cms": "M",
              "gw": "M"
            },
            "wasteManagement": {
              "cms": "M",
              "gw": "M"
            }
          }
        ]
      },
      "patch": {
        "description": "Partial update an attribute",
        "operationId": "partialUpdateAttribute",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Unique request identifier created by the CMS as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the Gateway as client and caused the current CMS request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }          ,
          {
            "description": "The TALQ address of device",
            "in": "path",
            "name": "deviceAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The identifier of device Function",
            "in": "path",
            "name": "functionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of device Attribute",
            "in": "path",
            "name": "attributeName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/Attribute"
              }
            }
          },
          "description": "The list of device that need to be updated",
          "required": true
        },
        "responses": {
          "200": {
            "description": "The attribute is successfully updated"
          },
          "202": {
            "description": "The attribute is successfully accepted for processing, but the processing has not been completed; in fact, processing may not have started yet."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Attribute not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors." 
          }
        },
        "summary": "",
        "tags": [
          "devices"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "M",
              "gw": "M"
            },
            "lighting": {
              "cms": "M",
              "gw": "M"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "M",
              "gw": "M"
            },
            "smartTraffic": {
              "cms": "M",
              "gw": "M"
            },
            "wasteManagement": {
              "cms": "M",
              "gw": "M"
            }
          }
        ]
      }
    },
    "/driver-types": {
      "get": {
        "description": "Get the list of all driver-types",
        "operationId": "getDriverTypes",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/DriverType"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The list of all driver-types"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          }
        },
        "summary": "",
        "tags": [
          "driver-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteOanagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      },
      "post": {
        "description": "Add a list of new driver types",
        "operationId": "addDriverTypes",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Unique request identifier created by the CMS as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the Gateway as client and caused the current CMS request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }          
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/DriverType"
                },
                "type": "array"
              }
            }
          },
          "description": "The list of driver types that needs to be added",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/DriverType"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The driver types are successfully created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The request could not be completed due to a conflict with the current state of the target resource. This code is used in situations where the CMS might be able to resolve the conflict and resubmit the request. The Gateway SHOULD generate a payload that includes enough information for a CMS to recognize the source of the conflict."
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors." 
          }
        },
        "summary": "",
        "tags": [
          "driver-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      },
      "put": {
        "description": "Update a list of existing driver types",
        "operationId": "updateDriverTypes",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Unique request identifier created by the CMS as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the Gateway as client and caused the current CMS request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }          
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/DriverType"
                },
                "type": "array"
              }
            }
          },
          "description": "The list of driver types that need to be updated",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/DriverType"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The driver types are successfully updated"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Driver types not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors." 
          }
        },
        "summary": "",
        "tags": [
          "driver-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      }
    },
    "/driver-types/count": {
      "get": {
        "description": "Get the count of driver types",
        "operationId": "getDriverTypesCount",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              }
            },
            "description": "The count of driver types"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          }
        },
        "summary": "",
        "tags": [
          "driver-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      }
    },
    "/driver-types/{driverTypeAddress}": {
      "delete": {
        "description": "Delete a single driver type",
        "operationId": "deleteDriverType",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Unique request identifier created by the CMS as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the Gateway as client and caused the current CMS request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }          ,
          {
            "description": "identifier of driver tye to delete",
            "in": "path",
            "name": "driverTypeAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/DriverType"
                }
              }
            },
            "description": "The driver type is successfully deleted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Driver type not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors. e.g: the driverType is referred by an entity." 
          }
        },
        "summary": "",
        "tags": [
          "driver-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      },
      "get": {
        "description": "Get a single driverType by address",
        "operationId": "getDriverType",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "identifier of driverType to return",
            "in": "path",
            "name": "driverTypeAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/DriverType"
                }
              }
            },
            "description": "The found driverType"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "DriverType not found"
          }
        },
        "summary": "",
        "tags": [
          "driver-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      },
      "put": {
        "description": "Update a single driver type by id",
        "operationId": "updateDriverType",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Unique request identifier created by the CMS as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the Gateway as client and caused the current CMS request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }          ,
          {
            "description": "identifier of driver type to update",
            "in": "path",
            "name": "driverTypeAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/DriverType"
              }
            }
          },
          "description": "The driver type that need to be updated",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/DriverType"
                }
              }
            },
            "description": "The driver type is successfully updated"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Driver type not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors." 
          }
        },
        "summary": "",
        "tags": [
          "driver-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      }
    },
    "/groups": {
      "get": {
        "description": "Get the list of groups",
        "operationId": "getGroups",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }          
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/Group"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The list of groups"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          }
        },
        "summary": "",
        "tags": [
          "groups"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "O",
              "gw": "O"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      },
      "post": {
        "description": "Add a list of new groups",
        "operationId": "addGroups",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Unique request identifier created by the CMS as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the Gateway as client and caused the current CMS request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }          
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/Group"
                },
                "type": "array"
              }
            }
          },
          "description": "The list of groups that needs to be added",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/Group"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The groups are successfully created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The request could not be completed due to a conflict with the current state of the target resource. This code is used in situations where the CMS might be able to resolve the conflict and resubmit the request. The Gateway SHOULD generate a payload that includes enough information for a CMS to recognize the source of the conflict."
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors." 
          }
        },
        "summary": "",
        "tags": [
          "groups"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "O",
              "gw": "O"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      },
      "put": {
        "description": "Update a list of existing groups",
        "operationId": "updateGroups",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Unique request identifier created by the CMS as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the Gateway as client and caused the current CMS request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }          
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/Group"
                },
                "type": "array"
              }
            }
          },
          "description": "The list of groups that need to be updated",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/Group"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The groups are successfully updated"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Groups not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors." 
          }
        },
        "summary": "",
        "tags": [
          "groups"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "O",
              "gw": "O"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      }
    },
    "/groups/count": {
      "get": {
        "description": "Get the count of groups",
        "operationId": "getGroupsCount",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }          
        ],
        "responses": {
          "200": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              }
            },
            "description": "The count of groups"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          }
        },
        "summary": "",
        "tags": [
          "groups"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "O",
              "gw": "O"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      }
    },
    "/groups/{groupAddress}": {
      "delete": {
        "description": "Delete a single group",
        "operationId": "deleteGroup",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Unique request identifier created by the CMS as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the Gateway as client and caused the current CMS request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }          ,
          {
            "description": "The address of group to delete",
            "in": "path",
            "name": "groupAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/Group"
                }
              }
            },
            "description": "The group is successfully deleted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Group not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors. e.g: the group is referred by an entity" 
          }
        },
        "summary": "",
        "tags": [
          "groups"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "O",
              "gw": "O"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      },
      "get": {
        "description": "Get a single group",
        "operationId": "getGroup",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "The address of group",
            "in": "path",
            "name": "groupAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/Group"
                }
              }
            },
            "description": "The found group"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Group not found"
          }
        },
        "summary": "",
        "tags": [
          "groups"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "O",
              "gw": "O"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      },
      "put": {
        "description": "Update a single group by id",
        "operationId": "updateGroup",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Unique request identifier created by the CMS as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the Gateway as client and caused the current CMS request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }          ,
          {
            "description": "The address of group to update",
            "in": "path",
            "name": "groupAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/Group"
              }
            }
          },
          "description": "The group that need to be updated",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/Group"
                }
              }
            },
            "description": "The group is successfully updated"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Group not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors." 
          }
        },
        "summary": "",
        "tags": [
          "groups"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "O",
              "gw": "O"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      }
    },
    "/groups/{groupAddress}/members": {
      "put": {
        "description": "Add one or more members to a group",
        "operationId": "addGroupMembers",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Unique request identifier created by the CMS as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the Gateway as client and caused the current CMS request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }          ,
          {
            "description": "The address of group to update",
            "in": "path",
            "name": "groupAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/ResourceReference"
                },
                "type": "array"
              }
            }
          },
          "description": "The references of members that need to be added in a group",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/ResourceReference"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The group is successfully updated"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Group not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors." 
          }
        },
        "summary": "",
        "tags": [
          "groups"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "O",
              "gw": "O"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      }
    },
    "/groups/{groupAddress}/members/count": {
      "get": {
        "description": "Get the count of group's members",
        "operationId": "getGroupMembersCount",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "The address of group",
            "in": "path",
            "name": "groupAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              }
            },
            "description": "The count of group's members"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Group not found"
          }
        },
        "summary": "",
        "tags": [
          "groups"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "O",
              "gw": "O"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      }
    },
    "/groups/{groupAddress}/members/{memberResource}/{memberAddress}": {
      "delete": {
        "description": "Delete a single member of a group",
        "operationId": "deleteGroupMember",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Unique request identifier created by the CMS as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the Gateway as client and caused the current CMS request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }          ,
          {
            "description": "The address of group whose member has to be deleted",
            "in": "path",
            "name": "groupAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The resource part of the reference to the member to delete. It can be 'groups' or 'devices'",
            "in": "path",
            "name": "memberResource",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of member to delete.",
            "in": "path",
            "name": "memberAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/ResourceReference"
                }
              }
            },
            "description": "The member is successfully deleted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Group or member not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors." 
          }
        },
        "summary": "",
        "tags": [
          "groups"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "O",
              "gw": "O"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      }
    },
    "/lamp-types": {
      "get": {
        "description": "Get the list of all lamp types",
        "operationId": "getLampTypes",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          } 
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/LampType"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The list of all lamp types"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Lamp types not found"
          }
        },
        "summary": "",
        "tags": [
          "lamp-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "O",
              "gw": "O"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteOanagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      },    
      "post": {
        "description": "Add a list of new lamp types",
        "operationId": "addLampTypes",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Unique request identifier created by the CMS as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the Gateway as client and caused the current CMS request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }          
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/LampType"
                },
                "type": "array"
              }
            }
          },
          "description": "The list of lamp types that needs to be added",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/LampType"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The lamp types are successfully created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The request could not be completed due to a conflict with the current state of the target resource. This code is used in situations where the CMS might be able to resolve the conflict and resubmit the request. The Gateway SHOULD generate a payload that includes enough information for a CMS to recognize the source of the conflict."
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors." 
          }
        },
        "summary": "",
        "tags": [
          "lamp-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "O",
              "gw": "O"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      },
      "put": {
        "description": "Update a list of existing lamp types",
        "operationId": "updateLampTypes",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Unique request identifier created by the CMS as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the Gateway as client and caused the current CMS request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }          
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/LampType"
                },
                "type": "array"
              }
            }
          },
          "description": "The list of lamp types that need to be updated",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/LampType"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The lamp types are successfully updated"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Lamp types not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors." 
          }
        },
        "summary": "",
        "tags": [
          "lamp-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "O",
              "gw": "O"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      }
    },
    "/lamp-types/count": {
      "get": {
        "description": "Get the count of lamp types",
        "operationId": "getLampTypesCount",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }          
        ],
        "responses": {
          "200": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              }
            },
            "description": "The count of lamp types"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          }
        },
        "summary": "",
        "tags": [
          "lamp-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "O",
              "gw": "O"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      }
    },
    "/lamp-types/{lampTypeAddress}": {
      "delete": {
        "description": "Delete a single lamp type",
        "operationId": "deleteLampType",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Unique request identifier created by the CMS as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the Gateway as client and caused the current CMS request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }          ,
          {
            "description": "identifier of lamp tye to delete",
            "in": "path",
            "name": "lampTypeAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/LampType"
                }
              }
            },
            "description": "The lamp type is successfully deleted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Lamp type not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors. The LampType is referred by an entity." 
          }
        },
        "summary": "",
        "tags": [
          "lamp-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "O",
              "gw": "O"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      },
      "get": {
        "description": "Get a single lampType by address",
        "operationId": "getLampType",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "identifier of lampType to return",
            "in": "path",
            "name": "lampTypeAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/LampType"
                }
              }
            },
            "description": "The found lampType"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "LampType not found"
          }
        },
        "summary": "",
        "tags": [
          "lamp-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "O",
              "gw": "O"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      },
      "put": {
        "description": "Update a single lamp type by id",
        "operationId": "updateLampType",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Unique request identifier created by the CMS as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the Gateway as client and caused the current CMS request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }          ,
          {
            "description": "identifier of lamp type to update",
            "in": "path",
            "name": "lampTypeAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/LampType"
              }
            }
          },
          "description": "The lamp type that need to be updated",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/LampType"
                }
              }
            },
            "description": "The lamp type is successfully updated"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Lamp type not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors." 
          }
        },
        "summary": "",
        "tags": [
          "lamp-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "O",
              "gw": "O"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      }
    },
    "/log-reports/count": {
      "get": {
        "description": "Get the count of log reports",
        "operationId": "getLogReportsCount",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              }
            },
            "description": "The count of log reports"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          }
        },
        "summary": "",
        "tags": [
          "log-reports"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "M",
              "gw": "M"
            },
            "lighting": {
              "cms": "M",
              "gw": "M"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "M",
              "gw": "M"
            },
            "smartTraffic": {
              "cms": "M",
              "gw": "M"
            },
            "wasteManagement": {
              "cms": "M",
              "gw": "M"
            }
          }
        ]
      }
    },
    "/log-reports/{loggerAddress}": {
      "get": {
        "description": "Get a log report. The Gateway shall report back to the CMS the content of the data logger in a logReport message, which must be included in the response. The content of the report message depends on the data logger reporting mode configuration: In case of a data logger with periodic recording mode the Gateway shall first add a snapshot of the data specified in the recording profiles as soon as possible after receiving the request, and then send this information snapshot to the CMS. Other not yet reported entries within the data logger may also be included; In case of a data logger with event recording mode the Gateway shall send not yet reported event logs to the CMS.",
        "operationId": "getLogReport",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "The address of data logger",
            "in": "path",
            "name": "loggerAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/LogReport"
                }
              }
            },
            "description": "The log report"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Data logger not found"
          }
        },
        "summary": "",
        "tags": [
          "log-reports"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "M",
              "gw": "M"
            },
            "lighting": {
              "cms": "M",
              "gw": "M"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "M",
              "gw": "M"
            },
            "smartTraffic": {
              "cms": "M",
              "gw": "M"
            },
            "wasteManagement": {
              "cms": "M",
              "gw": "M"
            }
          }
        ]
      }
    },
    "/logger-configs": {
      "post": {
        "description": "Send an logger configuration",
        "operationId": "addLoggerConfig",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Unique request identifier created by the CMS as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the Gateway as client and caused the current CMS request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }          
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/LoggerConfig"
              }
            }
          },
          "description": "The logger configuration to send",
          "required": true
        },
        "responses": {
          "201": {
            "description": "The logger configuration is successfully received"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The request could not be completed due to a conflict with the current state of the target resource. This code is used in situations where the CMS might be able to resolve the conflict and resubmit the request. The Gateway SHOULD generate a payload that includes enough information for a CMS to recognize the source of the conflict."
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors." 
          }
        },
        "summary": "",
        "tags": [
          "logger-configs"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "M",
              "gw": "M"
            },
            "lighting": {
              "cms": "M",
              "gw": "M"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "M",
              "gw": "M"
            },
            "smartTraffic": {
              "cms": "M",
              "gw": "M"
            },
            "wasteManagement": {
              "cms": "M",
              "gw": "M"
            }
          }
        ]
      }
    },
    "/logger-configs/{loggerAddress}": {
      "delete": {
        "description": "Delete a logger configuration",
        "operationId": "deleteLoggerConfig",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Unique request identifier created by the CMS as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the Gateway as client and caused the current CMS request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }          ,
          {
            "description": "The address of logger to delete",
            "in": "path",
            "name": "loggerAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/LoggerConfig"
                }
              }
            },
            "description": "The logger configuration is successfully deleted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Logger configuration not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors." 
          }
        },
        "summary": "",
        "tags": [
          "logger-configs"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "M",
              "gw": "M"
            },
            "lighting": {
              "cms": "M",
              "gw": "M"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "M",
              "gw": "M"
            },
            "smartTraffic": {
              "cms": "M",
              "gw": "M"
            },
            "wasteManagement": {
              "cms": "M",
              "gw": "M"
            }
          }
        ]
      },
      "get": {
        "description": "Get the configuration of a logger",
        "operationId": "getLoggerConfig",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "The identifier of logger",
            "in": "path",
            "name": "loggerAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/LoggerConfig"
                }
              }
            },
            "description": "The configuration of logger"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Logger not found"
          }
        },
        "summary": "",
        "tags": [
          "logger-configs"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "M",
              "gw": "M"
            },
            "lighting": {
              "cms": "M",
              "gw": "M"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "M",
              "gw": "M"
            },
            "smartTraffic": {
              "cms": "M",
              "gw": "M"
            },
            "wasteManagement": {
              "cms": "M",
              "gw": "M"
            }
          }
        ]
      },
      "put": {
        "description": "Update an logger configuration",
        "operationId": "updateLoggerConfig",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Unique request identifier created by the CMS as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the Gateway as client and caused the current CMS request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }          ,
          {
            "description": "The address of logger to update",
            "in": "path",
            "name": "loggerAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/LoggerConfig"
              }
            }
          },
          "description": "The logger configuration to update",
          "required": true
        },
        "responses": {
          "200": {
            "description": "The logger configuration is successfully updated"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Logger configuration not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors." 
          }
        },
        "summary": "",
        "tags": [
          "logger-configs"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "M",
              "gw": "M"
            },
            "lighting": {
              "cms": "M",
              "gw": "M"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "M",
              "gw": "M"
            },
            "smartTraffic": {
              "cms": "M",
              "gw": "M"
            },
            "wasteManagement": {
              "cms": "M",
              "gw": "M"
            }
          }
        ]
      }
    },
    "/luminaire-types": {
      "get": {
        "description": "Get the list of all luminaire-types",
        "operationId": "getLuminaireTypes",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }          
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/LuminaireType"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The list of all luminaire-types"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          }
        },
        "summary": "",
        "tags": [
          "luminaire-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteOanagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      },
      "post": {
        "description": "Add a list of new luminaire types",
        "operationId": "addLuminaireTypes",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Unique request identifier created by the CMS as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the Gateway as client and caused the current CMS request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }          
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/LuminaireType"
                },
                "type": "array"
              }
            }
          },
          "description": "The list of luminaire types that needs to be added",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/LuminaireType"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The luminaire types are successfully created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The request could not be completed due to a conflict with the current state of the target resource. This code is used in situations where the CMS might be able to resolve the conflict and resubmit the request. The Gateway SHOULD generate a payload that includes enough information for a CMS to recognize the source of the conflict."
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors." 
          }
        },
        "summary": "",
        "tags": [
          "luminaire-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      },
      "put": {
        "description": "Update a list of existing luminaire types",
        "operationId": "updateLuminaireTypes",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Unique request identifier created by the CMS as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the Gateway as client and caused the current CMS request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }          
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/LuminaireType"
                },
                "type": "array"
              }
            }
          },
          "description": "The list of luminaire types that need to be updated",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/LuminaireType"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The luminaire types are successfully updated"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Luminaire types not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors." 
          }
        },
        "summary": "",
        "tags": [
          "luminaire-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      }
    },
    "/luminaire-types/count": {
      "get": {
        "description": "Get the count of luminaire types",
        "operationId": "getLuminaireTypesCount",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              }
            },
            "description": "The count of luminaire types"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          }
        },
        "summary": "",
        "tags": [
          "luminaire-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      }
    },
    "/luminaire-types/{luminaireTypeAddress}": {
      "delete": {
        "description": "Delete a single luminaire type",
        "operationId": "deleteLuminaireType",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Unique request identifier created by the CMS as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the Gateway as client and caused the current CMS request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }          ,
          {
            "description": "identifier of luminaire tye to delete",
            "in": "path",
            "name": "luminaireTypeAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/LuminaireType"
                }
              }
            },
            "description": "The luminaire type is successfully deleted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Luminaire type not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors. e.g.: The LuminaireType is referred by an entity." 
          }
        },
        "summary": "",
        "tags": [
          "luminaire-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      },
      "get": {
        "description": "Get a single luminaireType by address",
        "operationId": "getLuminaireType",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "identifier of luminaireType to return",
            "in": "path",
            "name": "luminaireTypeAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/LuminaireType"
                }
              }
            },
            "description": "The found luminaireType"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "LuminaireType not found"
          }
        },
        "summary": "",
        "tags": [
          "luminaire-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      },
      "put": {
        "description": "Update a single luminaire type by id",
        "operationId": "updateLuminaireType",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Unique request identifier created by the CMS as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the Gateway as client and caused the current CMS request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }          ,
          {
            "description": "identifier of luminaire type to update",
            "in": "path",
            "name": "luminaireTypeAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/LuminaireType"
              }
            }
          },
          "description": "The luminaire type that need to be updated",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/LuminaireType"
                }
              }
            },
            "description": "The luminaire type is successfully updated"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Luminaire type not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors." 
          }
        },
        "summary": "",
        "tags": [
          "luminaire-types"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "O",
              "gw": "O"
            },
            "lighting": {
              "cms": "O",
              "gw": "O"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "O",
              "gw": "O"
            },
            "smartTraffic": {
              "cms": "O",
              "gw": "O"
            },
            "wasteManagement": {
              "cms": "O",
              "gw": "O"
            }
          }
        ]
      }
    },
    "/override-commands": {
      "post": {
        "description": "Send an override command. Asynchronous and synchronous behaviours are supported. When an asynchronous response is returned (202-Accepted), the command is considered being processed and the Gateway shall send a PATCH request, or several, sometime in the future. The PATCH request(s) from the Gateway will include the list of all the affected devices.",
        "operationId": "sendCommand",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Unique request identifier created by the CMS as client",
            "in": "query",
            "name": "talqRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Origin request identifier that was created by the Gateway as client and caused the current CMS request",
            "in": "query",
            "name": "talqOriginRequestId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }          
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/OverrideCommand"
              }
            }
          },
          "description": "The override command to send",
          "required": true
        },
        "responses": {
          "201": {
            "description": "The override command is successfully received and processed."
          },
          "202": {
            "description": "The override command is successfully accepted for processing, but the processing has not been completed; in fact, processing may not have started yet."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity: The request was well-formed as defined in the TALQ Specification but was unable to be followed due to semantic errors. e.g: The CommandOverride definition is not supported." 
          }
        },
        "summary": "",
        "tags": [
          "override-commands"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "M",
              "gw": "M"
            },
            "lighting": {
              "cms": "M",
              "gw": "M"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "M",
              "gw": "M"
            },
            "smartTraffic": {
              "cms": "M",
              "gw": "M"
            },
            "wasteManagement": {
              "cms": "M",
              "gw": "M"
            }
          }
        ]
      }
    },
    "/services": {
      "get": {
        "description": "Get configuration of all services supported by the gateway",
        "operationId": "getServices",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/Service"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The list of all services"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          }
        },
        "summary": "",
        "tags": [
          "services"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "M",
              "gw": "M"
            },
            "lighting": {
              "cms": "M",
              "gw": "M"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "M",
              "gw": "M"
            },
            "smartTraffic": {
              "cms": "M",
              "gw": "M"
            },
            "wasteManagement": {
              "cms": "M",
              "gw": "M"
            }
          }
        ]
      }
    },
    "/services/{serviceName}": {
      "get": {
        "description": "Get the configuration of a single service",
        "operationId": "getService",
        "parameters": [
          {
            "description": "the version of TALQ API",
            "in": "header",
            "name": "talq-api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of CMS",
            "in": "query",
            "name": "clientAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "The configuration of service to return",
            "in": "path",
            "name": "serviceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/Service"
                }
              }
            },
            "description": "The found service configuration"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request not as defined in the TALQ Specification"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "./talq-data-model-2-6-3-online.json#/components/schemas/TALQErrorMessage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Service not found"
          }
        },
        "summary": "",
        "tags": [
          "services"
        ],
        "x-talq-profiles": [
          {
            "environmentalMonitoring": {
              "cms": "M",
              "gw": "M"
            },
            "lighting": {
              "cms": "M",
              "gw": "M"
            },
            "lightingAssetManagement": {
              "cms": "M",
              "gw": "M"
            },
            "smartParking": {
              "cms": "M",
              "gw": "M"
            },
            "smartTraffic": {
              "cms": "M",
              "gw": "M"
            },
            "wasteManagement": {
              "cms": "M",
              "gw": "M"
            }
          }
        ]
      }
    }
  },
  "servers": [
    {
      "url": "https://talq-consortium.org/v2"
    }
  ],
  "tags": [
    {
      "description": "Access to services",
      "name": "services"
    },
    {
      "description": "Access to devices classes",
      "name": "device-classes"
    },
    {
      "description": "Access to devices",
      "name": "devices"
    },
    {
      "description": "Access to lamp types",
      "name": "lamp-types"
    },
    {
      "description": "Access to luminaire types",
      "name": "luminaire-types"
    },
    {
      "description": "Access to bracket types",
      "name": "bracket-types"
    },
    {
      "description": "Access to driver types",
      "name": "driver-types"
    },
    {
      "description": "Access to controller types",
      "name": "controller-types"
    },
    {
      "description": "Access to calendars",
      "name": "calendars"
    },
    {
      "description": "Access to control programs",
      "name": "control-programs"
    },
    {
      "description": "Access to assign commands",
      "name": "assign-commands"
    },
    {
      "description": "Access to override commands",
      "name": "override-commands"
    },
    {
      "description": "Access to logger configuration",
      "name": "logger-configs"
    },
    {
      "description": "Access to log reports",
      "name": "log-reports"
    },
    {
      "description": "Access to groups",
      "name": "groups"
    },
    {
      "description": "Access to data packages",
      "name": "data-packages"
    }
  ]
}